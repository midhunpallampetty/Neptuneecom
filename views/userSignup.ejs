<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Registration</title>
  <link rel="icon" href="/imgs/logo.png" type="image/x-icon">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.7/dist/sweetalert2.min.css">
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
    }

    form {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      max-width: 400px;
      width: 100%;
    }

    input,
    button {
      width: 100%;
      padding: 10px;
      margin: 8px 0;
      border-radius: 4px;
      border: 1px solid #ccc;
    }

    button {
      background-color: #007bff;
      color: white;
      border: none;
      cursor: pointer;
    }

    button:hover {
      background-color: #0056b3;
    }

    #countdownTimer {
      color: red;
      text-align: center;
    }

    .hidden {
      display: none;
    }
  </style>
</head>

<body>
  <form action="#">
    <h1>User Registration</h1>
    <div id="otpEmail">
      <input type="email" id="email" name="email" placeholder="Email Address" value="" class="form__input" />
      <span id="emailError" style="color: red"></span>
      <button type="button" onclick="sendEmailOtp()" class="btn">Send OTP</button>
    </div>

    <div style="display: none" id="remainingDiv">
      <p id="countdownTimer" style="color: red"></p>

      <input type="text" name="otp" placeholder="Enter OTP" id="otp" class="form__input" value="" />
      <span id="otpError" style="color: red"></span>
      <button type="button" onclick="verifyEmailOtp()" class="btn">
        Verify OTP
      </button>
    </div>
  </form>


  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.7/dist/sweetalert2.all.min.js"></script>
  <script>
    let countdownInterval;

    function validatePhoneNumber(number) {
      if (!number || number.length < 10 || !/^\+?\d{10,}$/.test(number)) {
        return "Enter a valid phone number with at least 10 digits.";
      }
      return null;
    }

    function startCountdown(duration, timerId) {
      const timerElement = document.getElementById(timerId);
      clearInterval(countdownInterval);

      countdownInterval = setInterval(() => {
        if (duration <= 0) {
          timerElement.textContent = "OTP expired. Please resend.";
          clearInterval(countdownInterval);
        } else {
          timerElement.textContent = `OTP expires in ${duration} seconds`;
          duration--;
        }
      }, 1000);
    }
    async function sendEmailOtp() {
      const email = document.getElementById("email").value.trim();

      if (!validateEmail(email)) {
        showError("emailError", "Please enter a valid email address.");
        return;
      }

      try {
        const response = await fetch("/send-otp", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });

        if (response.ok) {
          await Swal.fire("Success", "OTP has been sent to your email!", "success");
          document.getElementById("otpEmail").style.display = "none";
          document.getElementById("remainingDiv").style.display = "block";
          startCountdown(60, "countdownTimer");
        } else {
          const error = await response.json();
          await Swal.fire("Error", error.message || "Failed to send OTP", "error");
        }
      } catch (err) {
        await Swal.fire("Error", "Network error. Please try again later.", "error");
      }
    }

    async function verifyEmailOtp() {
      const otp = document.getElementById("otp").value.trim();
      console.log(otp, 'otdp');

      if (!otp) {
        showError("otpError", "Please enter the OTP.");
        return;
      }

      try {
        const response = await fetch("/verify-otps", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ otp }),
        });
        console.log('response');

        if (response.ok) {
          await Swal.fire("Success", "Email verified successfully!", "success");
        } else {
          const error = await response.json();
          await Swal.fire("Error", error.message || "Invalid OTP", "error");
        }
      } catch (err) {
        await Swal.fire("Error", "Network error. Please try again later.", "error");
      }
    }

    // Utility to validate email
    function validateEmail(email) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }

    // Countdown Timer Function
    function startCountdown(duration, timerElementId) {
      const timerElement = document.getElementById(timerElementId);
      let timer = duration;

      clearInterval(window.countdown);
      window.countdown = setInterval(() => {
        if (timer <= 0) {
          timerElement.textContent = "OTP Expired";
          clearInterval(window.countdown);
        } else {
          timerElement.textContent = `OTP Expires in ${timer} seconds`;
          timer--;
        }
      }, 1000);
    }

    // Utility to display error messages
    function showError(fieldId, errorMessage) {
      const errorSpan = document.getElementById(fieldId);
      errorSpan.textContent = errorMessage;
    }





    async function resendOtp() {
      clearInterval(countdownInterval);
      await sendEmailOtp();
    }
  </script>
</body>

</html>